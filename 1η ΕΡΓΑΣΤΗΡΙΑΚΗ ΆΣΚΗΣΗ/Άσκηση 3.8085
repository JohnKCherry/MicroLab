IN 10H
MVI A,00H	

LXI H,0BF0H	  ; Αρχικοποίηση του τμήματος μνήμης που
MVI M,10H	  ; χρησιμοποιείται από τη ρουτίνα DCD
INX H
MVI M,10H	  ;θέλουμε να εμφανιστουν στα 3 αριστερότερα απο τα 7-display segments
INX H
MVI M,10H
INX H
MVI M,00H
INX H
MVI M,00H
INX H
MVI M,00H
START:
READ_FIRST_NUMBER:
CALL KIND	             ;Διαβάζουμε από το πληκτρολόγιο
CPI 10H	             ;Κοιτάμε αν είναι δεκαεξαδικό το ψηφίο (0-F)
JNC READ_FIRST_NUMBER      ;Περιμένουμε μέχρι να έρθει ένα έγκυρο ψηφίο
	
ADD A         ;Α+Α=2Α
ADD A         ;(2Α)+(2Α)=4Α
ADD A         ;(4Α)+(4Α)=8Α
ADD A         ;(8Α)+(8Α)=16Α το οποίο θέλουμε
MOV B,A       ;στον καταχωτητή B έχουμε το αποτέλεσμα της  16*X ,όπου Χ1 είναι ο πρώτος αριθμός (χ)

READ_SECOND_NUMBER:
CALL KIND	           ;Διαβάζουμε από το πληκτρολόγιο
CPI 10H	           ;Κοιτάμε αν είναι δεκαεξαδικό το ψηφίο (0-F)
JNC READ_SECOND_NUMBER   ;Περιμένουμε μέχρι να έρθει ένα έγκυρο ψηφίο

ADD B        ;προσθέτουμε τον 2ο αριθμό με το αποτέλεσμα 16*Χ που βρίσκεται στον καταχωρητή Β

MVI B,FFH    ;εύρεση εκατοντάδων,δεκάδων και μονάδων του αποτελέσματος
HUNDR:	      ;για εκατοντάδες
INR B	      ;αφαιρούμε απο το Β το 64Η=100D μέχρι να γίνει αρνητικός και μετράμε το πλήθος των αφαιρέσεων
SUI 64H      
JNC HUNDR   ;αν εξακολουθεί να είναι θετικός πήγαινε στην HUNDR
ADI 64H     ;προσθέτουμε το 64H για να διορθώσουμε το αρνητικό υπόλοιπο
MOV C,A     ;στον C βάζω τον 2-ψηφιο αριθμό που μένει
MOV A,B
STA 0BF5H   ;αποθήκευσε τις εκατοντάδες στην κατάλληλη θέση για την DCD (αριστερότερο ψηφίο)
MOV A,C     
MVI B,FFH   
DECA:      ;για δεκάδες
INR B      ;αφαιρούμε απο το Β το 0AΗ=10D μέχρι να γίνει αρνητικός και μετράμε το πλήθος των αφαιρέσεων
SUI 0AH
JNC DECA   ;αν εξακολουθεί να είναι θετικός πήγαινε στην DECA
ADI 0AH    ;προσθέτουμε το 0AH για να διορθώσουμε το αρνητικό υπόλοιπο
STA 0BF3H  ;αποθήκευσε τις μονάδες στην κατάλληλη θέση για την DCD (τρίτο από τα αριστερά ψηφίο)
MOV A,B    
STA 0BF4H  ;αποθήκευσε τις δεκάδες στην κατάλληλη θέση για την DCD (δεύτερο από τα αριστερά ψηφίο)
 
CALL DCD   ;καλλούμε την DCD για εμφάνιση του αποτελέσματος
JMP START  ;το πρόγραμμα είναι συνεχούς λειτουργίας
END