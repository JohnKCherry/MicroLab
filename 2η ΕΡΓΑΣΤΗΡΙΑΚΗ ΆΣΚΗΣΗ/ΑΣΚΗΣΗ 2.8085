NOP       ;αεχικοποίηση των θέσεων 0800H και 0800H για την 
NOP       ;αποθήκευση των δύο διψήφιων αριθμών
IN 10H

MVI A,00H
LXI H,0BF0H	     ;Αρχικοποίηση του τμήματος μνήμης που
MVI M,00H	     ;χρησιμοποιείται από τη ρουτίνα DCD
INX H                     
MVI M,00H	     ;θέλουμε να εμφανίζονται όλες οι ενδείξεις της 
INX H              ;7 segment-dislpay άρα βάζουμε την τιμή 00H
MVI M,00H
INX H
MVI M,00H
INX H
MVI M,00H
INX H
MVI M,00H

START:
                           ;ΓΙΑ ΤΟ ΔΙΑΒΑΣΜΑ ΤΟΥ 1ΟΥ ΔΙΨΗΦΙΟΥ ΑΡΙΘΜΟΥ
READ_FIRST_NUMBER:         ;διαβασμα 1ου ψηψίου (δεκάδες)
CALL KIND	             ;Διαβάζουμε από το πληκτρολόγιο
CPI 0AH	             ;Κοιτάμε αν είναι δεκαδικό το ψηφίο (0-9)
JNC READ_FIRST_NUMBER      ;Περιμένουμε μέχρι να έρθει ένα έγκυρο ψηφίο

STA 0BF1H                 ;αποθηκεύουμε τις μονάδες του αριθμού στην θέση OBF1H ώστε να 
CALL DCD                  ;την εμφανίσει η DCD στο δεξί μέρος της οθόνης (προτελευταία ένδειξη)

READ_SECOND_NUMBER:       ;διάβασμα του 2ου ψηφίου (μονάδες)
CALL KIND	            ;Διαβάζουμε από το πληκτρολόγιο
CPI 0AH	            ;Κοιτάμε αν είναι δεκαδικό το ψηφίο (0-9)
JNC READ_FIRST_NUMBER     ;Περιμένουμε μέχρι να έρθει ένα έγκυρο ψηφίο

STA 0BF0H               ;αποθηκεύουμε τις μονάδες του αριθμού στην θέση OBF0H ώστε να 
CALL DCD                ;την εμφανίσει η DCD στο δεξί μέρος της οθόνης (τελευταία ένδειξη)

LDA 0BF1H              ;σχηματισμός του 1ου δηψίφιου αριθμού.
ADD A                  ;Α+Α=2Α               
MOV B,A                ;Β<-2Α   
ADD A                  ;2Α+2Α=4Α
ADD A                  ;4Α+4Α=8Α
ADD B                  ;8Α+2Α=10Α
MOV B,A                

LDA 0BF0H
ADD B                 ;Γίνεται η πράξη 10*δεκάδες + μονάδες
STA 0800H             ;στην θέση 0800H αποθηκεύεται 1ος 2-ψηφιος αριθμος !!

READ_PRAKSH:          ;ΔΙΑΒΑΣΜΑ ΤΗΣ ΠΡΑΞΗΣ
CALL KIND             ;Διαβάζουμε από το πληκτρολόγιο
CPI 81H               ;ελέγχουμε αν πατήθηκε το πλήκτρο FETCH PC ή το DECR
JZ OK                 ;αν δεν πατήθηκε κανένα απο τα προηγούμενα τότε ξαναδιάβασε
CPI 85H
JNZ READ_PRAKSH
OK:
MOV E,A    ;στον Ε έχουμε την τιμή του κουμπιού που πατήθηκε που καθορίζει την πράξη που θα εκτελεστεί
                           ;ΓΙΑ ΤΟ ΔΙΑΒΑΣΜΑ ΤΟΥ 2ΟΥ ΔΙΨΗΦΙΟΥ ΑΡΙΘΜΟΥ
READ_FIRST_NUMBER1:        ;διαβασμα 1ου ψηψίου (δεκάδες)
CALL KIND	             ;Διαβάζουμε από το πληκτρολόγιο
CPI 0AH	             ;Κοιτάμε αν είναι δεκαδικό το ψηφίο (0-9)
JNC READ_FIRST_NUMBER1     ;Περιμένουμε μέχρι να έρθει ένα έγκυρο ψηφίο


STA 0BF5H                  ;αποθηκεύουμε τις μονάδες του αριθμού στην θέση OBF5H ώστε να 
CALL DCD                   ;την εμφανίσει η DCD στο αριστερό μέρος της οθόνης (πρώτη από την αρχή ένδειξη)

READ_SECOND_NUMBER1:       ;διαβασμα 2ου ψηψίου (μονάδες)
CALL KIND	             ;Διαβάζουμε από το πληκτρολόγιο
CPI 0AH	             ;Κοιτάμε αν είναι δεκαδικό το ψηφίο (0-9)
JNC READ_FIRST_NUMBER1     ;Περιμένουμε μέχρι να έρθει ένα έγκυρο ψηφίο

STA 0BF4H                  ;αποθηκεύουμε τις μονάδες του αριθμού στην θέση OBF5H ώστε να 
CALL DCD                   ;την εμφανίσει η DCD στο αριστερό μέρος της οθόνης (δεύτερη από την αρχή ένδειξη)
 
LDA 0BF5H                  ;σχηματισμός του 1ου δηψίφιου αριθμού. όμοια με πριν
ADD A
MOV B,A
ADD A
ADD A
ADD B
MOV B,A

LDA 0BF4H
ADD B                     ;Γίνεται η πράξη 10*δεκάδες + μονάδες
STA 0801H                 ;στην θέση μνήμης 0801H Ο 2ος 2-ψηφιος αριθμος !!

MOV A,E      ;στον Ε έχουμε την πράξη που θα κάνει
CPI 85H      ;αν έχει την τιμή 85H θα κάνει αφαίρεση αλλίως πρόσθεση
JNZ NEXT

LDA 0800H    ;εκτελείται η πράξη: 1ος αριθμός + 2ος αριθμός 
MOV B,A
LDA 0801H
ADD B
CPI 64H      ;αν το αποτέλεσμα είναι μεγαλύτερο από 99 τότε έχουμε υπερχύληση
JNC OVERFLOAT    
CALL DCD    
JMP EYRESH_MONADON_DEKADON

NEXT:        
LDA 0800H    
MOV B,A
LDA 0801H
CMP B       ;αν ο αφαιρεταίος είναι μικρότερος από τον αφαιρέτη βρες την απόλυτη τιμή 
JNC AFAIR   ;της διαφοράς
STA 0800H   ;κώδικας που αντιμεταθέτει τους αριθμούς ώστε η διαφορά να είναι 
MOV A,B     ;μεγαλύτερη του 0
STA 0801H

AFAIR:      ;εκτελείται η πράξη της αφαίρεσης
LDA 0800H
MOV B,A
LDA 0801H
SUB B

EYRESH_MONADON_DEKADON:    ;ανάλυση του αριθμού σε μονάδες και δεκάδες 
MVI B,FFH   
DECA:      ;για δεκάδες
INR B      ;αφαιρούμε απο το Β το 0AΗ=10D μέχρι να γίνει αρνητικός και μετράμε το πλήθος των αφαιρέσεων
SUI 0AH
JNC DECA   ;αν εξακολουθεί να είναι θετικός πήγαινε στην DECA
ADI 0AH    ;προσθέτουμε το 0AH για να διορθώσουμε το αρνητικό υπόλοιπο
STA 0BF2H  ;αποθήκευσε τις μονάδες στην κατάλληλη θέση για την DCD 
MOV A,B    
STA 0BF3H  ;αποθήκευσε τις δεκάδες στην κατάλληλη θέση για την DCD
CALL DCD
JMP START
  
OVERFLOAT:     
MVI A,1CH   ;η περίπτωση της υπερχείλησης. σε αυτή την περίπτωση η άσκηση ζητάει να 
STA 0BF3H   ;εμφανίσει την τιμή -- . ο χαρακτήρας - αναπαριστάται απο την τιμή 1CH
STA 0BF2H
CALL DCD

JMP START  ;το πρόγραμμα είναι συνεχής λειτουργίας
END
